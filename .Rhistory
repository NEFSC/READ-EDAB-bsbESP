legend.direction = "horizontal",
legend.box = "horizontal")
plt +
ggplot2::guides(shape = "none") +
ggplot2::theme(aspect.ratio = 0.4,
legend.position = "bottom",
legend.direction = "horizontal",
legend.box = "horizontal",
legend.title = ggplot2::element_blank())
plt +
ggplot2::ylab("Relative condition") +
ggplot2::guides(shape = "none") +
ggplot2::theme(aspect.ratio = 0.4,
legend.position = "bottom",
legend.direction = "horizontal",
legend.box = "horizontal",
legend.title = ggplot2::element_blank())
plt +
ggplot2::ylab("Relative condition") +
ggplot2::guides(shape = "none") +
ggplot2::theme(aspect.ratio = 0.4,
legend.position = "bottom",
legend.direction = "horizontal",
legend.box = "horizontal",
legend.title = ggplot2::element_blank())
plt +
ggplot2::guides(shape = "none") +
ggplot2::theme(aspect.ratio = 0.4,
legend.position = "bottom",
legend.direction = "horizontal",
legend.box = "horizontal",
legend.title = ggplot2::element_blank(),
axis.text.y = ggplot2::element_text()) +
ggplot2::ylab("Relative condition")
plt +
ggplot2::guides(shape = "none") +
ggplot2::theme(aspect.ratio = 0.4,
legend.position = "bottom",
legend.direction = "horizontal",
legend.box = "horizontal",
legend.title = ggplot2::element_blank(),
axis.text.y = ggplot2::element_text()) +
ggplot2::ylab("Relative condition")
devtools::load_all("../READ-EDAB-NEesp2")
plt <- NEesp2::plot_condition(data = condition,
var = 'Black sea bass')
plt +
ggplot2::guides(shape = "none") +
ggplot2::theme(aspect.ratio = 0.4,
legend.position = "bottom",
legend.direction = "horizontal",
legend.box = "horizontal",
legend.title = ggplot2::element_blank()) +
ggplot2::ylab("Relative condition")
plt +
ggplot2::guides(shape = "none") +
ggplot2::theme(aspect.ratio = 0.4,
legend.position = "bottom",
legend.direction = "horizontal",
legend.box = "horizontal",
legend.title = ggplot2::element_blank()) +
ggplot2::ylab("Relative condition") +
ggplot2::scale_y_continuous(breaks = seq(0.9, 1.05, by = 0.05))
plt +
ggplot2::guides(shape = "none") +
ggplot2::theme(aspect.ratio = 0.4,
legend.position = "bottom",
legend.direction = "horizontal",
legend.box = "horizontal",
legend.title = ggplot2::element_blank()) +
ggplot2::ylab("Relative condition") +
ggplot2::scale_y_continuous(breaks = seq(0.9, 1.05, by = 0.05),
limits = c(0.9, 1.05))
plt +
ggplot2::guides(shape = "none") +
ggplot2::theme(aspect.ratio = 0.4,
legend.position = "bottom",
legend.direction = "horizontal",
legend.box = "horizontal",
legend.title = ggplot2::element_blank()) +
ggplot2::ylab("Relative condition") +
ggplot2::scale_y_continuous(breaks = seq(0.9, 1.05, by = 0.05),
limits = c(0.88, 1.05))
ggplot2::ggsave(here::here("images/new_condition.png"),
width = 4,
height = 1.5,
dpi = 300,
units = "in",
device = ragg::agg_png(bg = "white"))
ggplot2::ggsave(here::here("images/new_condition.png"),
width = 6,
height = 4,
dpi = 300,
units = "in",
device = ragg::agg_png(bg = "white"))
plt +
ggplot2::guides(shape = "none",
color = ggplot2::guide_legend(ncol = 3)) +
ggplot2::theme(aspect.ratio = 0.4,
legend.position = "bottom",
legend.direction = "horizontal",
legend.box = "horizontal",
legend.title = ggplot2::element_blank()) +
ggplot2::ylab("Relative condition") +
ggplot2::scale_y_continuous(breaks = seq(0.9, 1.05, by = 0.05),
limits = c(0.88, 1.05))
plt +
ggplot2::guides(shape = "none",
color = ggplot2::guide_legend(ncol = 3)) +
ggplot2::theme(aspect.ratio = 0.4,
legend.position = "bottom",
legend.direction = "horizontal",
legend.box = "horizontal",
legend.title = ggplot2::element_blank()) +
ggplot2::ylab("Relative condition") +
ggplot2::scale_y_continuous(breaks = seq(0.9, 1.05, by = 0.05),
limits = c(0.88, 1.05))
ggplot2::ggsave(here::here("images/new_condition.png"),
width = 6,
height = 4,
dpi = 300,
units = "in",
device = ragg::agg_png(bg = "white"))
ggplot2::ggsave(here::here("images/new_condition.png"),
width = 6,
height = 3.5,
dpi = 300,
units = "in",
device = ragg::agg_png(bg = "white"))
plt +
ggplot2::guides(shape = "none",
color = ggplot2::guide_legend(ncol = 3)) +
ggplot2::theme(aspect.ratio = 0.4,
legend.position = "bottom",
legend.direction = "horizontal",
legend.box = "horizontal",
legend.title = ggplot2::element_blank(),
legend.byrow = TRUE) +
ggplot2::ylab("Relative condition") +
ggplot2::scale_y_continuous(breaks = seq(0.9, 1.05, by = 0.05),
limits = c(0.88, 1.05))
plt +
ggplot2::guides(shape = "none",
color = ggplot2::guide_legend(ncol = 3)) +
ggplot2::theme(aspect.ratio = 0.4,
legend.position = "bottom",
legend.direction = "horizontal",
legend.box = "horizontal",
legend.title = ggplot2::element_blank(),
legend.byrow = TRUE,
plot.background = ggplot2::element_rect(color = "black",
linewidth = 2)) +
ggplot2::ylab("Relative condition") +
ggplot2::scale_y_continuous(breaks = seq(0.9, 1.05, by = 0.05),
limits = c(0.88, 1.05))
ggplot2::ggsave(here::here("images/new_condition.png"),
width = 6,
height = 3.5,
dpi = 300,
units = "in",
device = ragg::agg_png(bg = "white"))
ggplot2::ggsave(here::here("images/new_condition.png"),
width = 6,
height = 3,
dpi = 300,
units = "in",
device = ragg::agg_png(bg = "white"))
ggplot2::ggsave(here::here("images/new_condition.png"),
width = 6,
height = 3.25,
dpi = 300,
units = "in",
device = ragg::agg_png(bg = "white"))
plt +
ggplot2::guides(shape = "none",
color = ggplot2::guide_legend(ncol = 3)) +
ggplot2::theme(aspect.ratio = 0.4,
legend.position = "bottom",
legend.direction = "horizontal",
legend.box = "horizontal",
legend.title = ggplot2::element_blank(),
legend.byrow = TRUE,
plot.background = ggplot2::element_rect(color = "black",
linewidth = 2),
legend.background = ggplot2::element_rect(fill = NULL, color = NULL)) +
ggplot2::ylab("Relative condition") +
ggplot2::scale_y_continuous(breaks = seq(0.9, 1.05, by = 0.05),
limits = c(0.88, 1.05))
ggplot2::ggsave(here::here("images/new_condition.png"),
width = 6,
height = 3.25,
dpi = 300,
units = "in",
device = ragg::agg_png(bg = "white"))
plt +
ggplot2::guides(shape = "none"#,
# color = ggplot2::guide_legend(ncol = 3)
) +
ggplot2::theme(aspect.ratio = 0.4,
# legend.position = "bottom",
# legend.direction = "horizontal",
legend.box = "horizontal",
legend.title = ggplot2::element_blank(),
# legend.byrow = TRUE,
plot.background = ggplot2::element_rect(color = "black",
linewidth = 2),
legend.background = ggplot2::element_rect(fill = NULL, color = NULL)) +
ggplot2::ylab("Relative condition") +
ggplot2::scale_y_continuous(breaks = seq(0.9, 1.05, by = 0.05),
limits = c(0.88, 1.05))
plt +
ggplot2::guides(shape = "none"#,
# color = ggplot2::guide_legend(ncol = 3)
) +
ggplot2::theme(aspect.ratio = 0.4,
# legend.position = "bottom",
# legend.direction = "horizontal",
# legend.box = "horizontal",
legend.title = ggplot2::element_blank(),
# legend.byrow = TRUE,
plot.background = ggplot2::element_rect(color = "black",
linewidth = 2)) +
ggplot2::ylab("Relative condition") +
ggplot2::scale_y_continuous(breaks = seq(0.9, 1.05, by = 0.05),
limits = c(0.88, 1.05))
ggplot2::ggsave(here::here("images/new_condition.png"),
width = 6,
height = 3.25,
dpi = 300,
units = "in",
device = ragg::agg_png(bg = "white"))
plt +
ggplot2::guides(shape = "none"#,
# color = ggplot2::guide_legend(ncol = 3)
) +
ggplot2::theme(#aspect.ratio = 0.4,
# legend.position = "bottom",
# legend.direction = "horizontal",
# legend.box = "horizontal",
legend.title = ggplot2::element_blank(),
# legend.byrow = TRUE,
plot.background = ggplot2::element_rect(color = "black",
linewidth = 2)) +
ggplot2::ylab("Relative condition") +
ggplot2::scale_y_continuous(breaks = seq(0.9, 1.05, by = 0.05),
limits = c(0.88, 1.05))
ggplot2::ggsave(here::here("images/new_condition.png"),
width = 6,
height = 3.25,
dpi = 300,
units = "in",
device = ragg::agg_png(bg = "white"))
plt +
ggplot2::guides(shape = "none"#,
# color = ggplot2::guide_legend(ncol = 3)
) +
ggplot2::theme(aspect.ratio = 0.6,
# legend.position = "bottom",
# legend.direction = "horizontal",
# legend.box = "horizontal",
legend.title = ggplot2::element_blank(),
# legend.byrow = TRUE,
plot.background = ggplot2::element_rect(color = "black",
linewidth = 2)) +
ggplot2::ylab("Relative condition") +
ggplot2::scale_y_continuous(breaks = seq(0.9, 1.05, by = 0.05),
limits = c(0.88, 1.05))
ggplot2::ggsave(here::here("images/new_condition.png"),
width = 6,
height = 3.25,
dpi = 300,
units = "in",
device = ragg::agg_png(bg = "white"))
ggplot2::ggsave(here::here("images/new_condition.png"),
width = 6,
height = 3,
dpi = 300,
units = "in",
device = ragg::agg_png(bg = "white"))
ggplot2::ggsave(here::here("images/new_condition.png"),
width = 6,
height = 2.5,
dpi = 300,
units = "in",
device = ragg::agg_png(bg = "white"))
ggplot2::ggsave(here::here("images/new_condition.png"),
width = 6,
height = 2.25,
dpi = 300,
units = "in",
device = ragg::agg_png(bg = "white"))
ggplot2::ggsave(here::here("images/new_condition.png"),
width = 6,
height = 2.3,
dpi = 300,
units = "in",
device = ragg::agg_png(bg = "white"))
ggplot2::ggsave(here::here("images/new_condition.png"),
width = 6,
height = 2.4,
dpi = 300,
units = "in",
device = ragg::agg_png(bg = "white"))
renv::snapshot()
renv::snapshot()
targets::tar_visnetwork()
install.packages("targets")
targets::tar_make()
install.packages("tarchetypes")
renv::snapshot()
renv::snapshot()
targets::tar_make()
targets::tar_make()
source(here::here("../READ-EDAB-NEesp2"))
source(here::here("../READ-EDAB-NEesp2"))
remotes::install_github("NEFSC/READ-EDAB-NEesp2")
remotes::install_github("NEFSC/READ-EDAB-NEesp2")
remotes::install_github("NEFSC/READ-EDAB-NEesp2", force = TRUE)
targets::tar_make()
targets::tar_make()
NEesp2::find_files("meta_data")
targets::tar_make()
NEesp2::create_rec_trips
remotes::install_github("NEFSC/READ-EDAB-NEesp2")
?install_github
remotes::install_github("NEFSC/READ-EDAB-NEesp2", ref = "abby_dev")
targets::tar_make()
NEesp2::create_rec_trips(files =  list.files(
path = here::here("../READ-EDAB-MRIP/inputs/Black_sea_bass_trips.Rds"),
full.names = TRUE
))
NEesp2::create_rec_trips
remotes::install_github("NEFSC/READ-EDAB-NEesp2", ref = "abby_dev")
NEesp2::create_rec_trips
remove.packages("NEesp2")
remotes::install_github("NEFSC/READ-EDAB-NEesp2", ref = "abby_dev")
NEesp2::create_rec_trips
remove.packages("NEesp2")
remotes::install_github("NEFSC/READ-EDAB-NEesp2", ref = "abby_dev")
NEesp2::create_rec_trips
NEesp2::create_rec_trips(files =  list.files(
path = here::here("../READ-EDAB-MRIP/inputs/Black_sea_bass_trips.Rds"),
full.names = TRUE
))
files <- list.files(
path = here::here("../READ-EDAB-MRIP/inputs/Black_sea_bass_trips.Rds"),
full.names = TRUE
)
files
files <- list.files(
path = here::here("../READ-EDAB-MRIP/inputs/Black_sea_bass_trips"),
full.names = TRUE
)
NEesp2::create_rec_trips(files =  list.files(
path = here::here("../READ-EDAB-MRIP/inputs/Black_sea_bass_trips"),
full.names = TRUE
))
remove.packages("NEesp2")
remotes::install_github("NEFSC/READ-EDAB-NEesp2", ref = "abby_dev")
NEesp2::create_rec_trips(files =  list.files(
path = here::here("../READ-EDAB-MRIP/inputs/Black_sea_bass_trips"),
full.names = TRUE
))
targets::tar_make()
targets::tar_make()
targets::tar_make()
risk_fig <- NEesp2::plot_risk(risk_elements = tibble::tibble(stock = c(4, 0, 2, 2),
recreational = c(1, 1, 1, 3),
commercial = c(1, 4, 2, 0)))
ggplot2::ggsave(risk_fig,
filename = here::here("images/risk_plot.png"),
width = 4,
height = 2.5,
dpi = 300)
targets::tar_load_everything()
comm_data
comm_data |> dplyr::filter(INDICATOR_NAME == "N_Commercial_Vessels_Landing_BLACK_SEABASS
")
unique(comm_data$INDICATOR_NAME)
comm_data |> dplyr::filter(INDICATOR_NAME == "N_Commercial_Vessels_Landing_BLACK_SEABASS")
comm_data |> dplyr::filter(INDICATOR_NAME == "N_Commercial_Vessels_Landing_BLACK_SEABASS") |> View()
all_data
unique(all_data$INDICATOR_NAME)
all_data |> dplyr::filter(INDICATOR_NAME == "BSB_Commercial_Vessels")
all_data |> dplyr::filter(INDICATOR_NAME == "BSB_Commercial_Vessels") |> View()
tarets::tar_make()
targets::tar_make()
install.packages("readxl")
targets::tar_make()
target::tar_make("all_data")
targets::tar_make("all_data")
targets::tar_invalidate("all_data")
target::tar_make()
targets::tar_make()
remotes::install_github("kshotwell/AKesp")
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_invalidate("all_data")
targets::tar_make()
renv::snapshot()
?theme
targets::tar_make()
targets::tar_make()
nc_to_raster <- function(nc,
varname,
extent = c(0, 360, -90, 90),
crop = raster::extent(280, 300, 30, 50),
show_images = FALSE) {
message("Reading .nc as brick...")
bottomT <- c('var$bottomT')
r <- raster::brick(nc, varname = varname)
message("Setting CRS...")
raster::crs(r) <- "+proj=longlat +lat_1=35 +lat_2=45 +lat_0=40 +lon_0=-77 +x_0=0 +y_0=0 +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0"
# not sure if this is necessary?
raster::extent(r) <- raster::extent(extent)
if(show_images){
par(mfrow = c(1,2))
raster::plot(r, 1, sub = "Full dataset")
}
message("Cropping data...")
ne_data <- raster::crop(r, crop)
if(show_images){
raster::plot(ne_data, 1, sub = "Cropped dataset")
par(mfrow = c(1,1))
}
message("Done!")
return(ne_data)
}
test_nc <- ncdf4::nc_open(here::here('data-raw/test_2025_06_13.nc'))
test_nc <- ncdf4::nc_open(here::here('data-raw/test_2025-06-13.nc'))
View(test_nc)
pak::pak("NEFSC/READ-EDAB-NEesp2")
library(flextable)
NEesp2::rpt_card_table
knitr::opts_chunk$set(echo = FALSE,
message = FALSE,
warning = FALSE)
devtools::load_all(here::here("../READ-EDAB-NEesp2"))
# here::i_am("inst/esp_template/06_docs/report card pg 1.qmd")
devtools::load_all("../READ-EDAB-NEesp2")
data <- NEesp2::format_tbl_data(file = params$tbl_file,
term_year = params$terminal_year,
dir = params$img_dir)
tbl <- NEesp2::rpt_card_table(data,
widths = params$widths)
rpt_card_table <- function(data,
widths) {
# if(sum(!colnames(data) %in% c("figure", "w", "h", "indicator_units", "status_in_2024", "implications")) != 0) {
#  stop("Your input data is missing columns or has incorrect column names")
#}
small_dat <- data |>
dplyr::mutate(figure = NA) |>
dplyr::select(-c(w, h)) |>
dplyr::rename(time_series = figure)
colnames(small_dat) <- colnames(small_dat) |>
stringr::str_replace_all("_", " ") |>
stringr::str_to_title()
flextable::set_flextable_defaults(font.size = 10)
tbl <- flextable::flextable(small_dat)
tbl <- flextable::width(tbl, j = 1:4,
width = widths,
unit = "in")
tbl <- flextable::theme_box(tbl)
for(i in 1:nrow(small_dat)){
tbl <- flextable::compose(tbl,
i = i,
j = 4,
value = flextable::as_paragraph(
flextable::as_image(src = data$figure[i],
width = data$w[i],
height = data$h[i],
unit = "in",
guess_size = FALSE)))
}
tbl <- flextable::align(tbl, i = 1, j = 1:4, align = "center", part = "header")
tbl <- flextable::align(tbl, i = 1:nrow(small_dat), j = 4, align = "center")
return(tbl)
}
devtools::load_all("../READ-EDAB-NEesp2")
bio_data <- read.csv(here::here("data/survey_bio_data.csv"))
condition <- NEesp2::species_condition(data = bio_data,
LWparams = NEesp2::LWparams,
species.codes = NEesp2::species.codes,
by_EPU = FALSE)
View(condition)
plt <- NEesp2::plot_condition(data = condition,
var = 'Black sea bass')
install.packages("viridis")
plt <- NEesp2::plot_condition(data = condition,
var = 'Black sea bass')
plt +
ggplot2::guides(shape = "none"#,
# color = ggplot2::guide_legend(ncol = 3)
) +
ggplot2::theme(aspect.ratio = 0.6,
# legend.position = "bottom",
# legend.direction = "horizontal",
# legend.box = "horizontal",
legend.title = ggplot2::element_blank(),
# legend.byrow = TRUE,
plot.background = ggplot2::element_rect(color = "black",
linewidth = 2)) +
ggplot2::ylab("Relative condition") +
ggplot2::scale_y_continuous(breaks = seq(0.9, 1.05, by = 0.05),
limits = c(0.88, 1.05))
ggplot2::ggsave(here::here("images/new_condition.png"),
width = 6,
height = 2.4,
dpi = 300,
units = "in",
device = ragg::agg_png(bg = "white"))
